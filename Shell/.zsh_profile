#!/usr/bin/env bash

# Path: .zprofile
# Purpose: Configure a zsh shell environment
# Use: Sourced by .profile when using zsh as the default shell

# shellcheck source=/dev/null

if [[ ! ":$PATH:" == *":${HOME}/.local/bin:"* ]]; then
  PATH="${HOME}/.local/bin:${PATH}"
fi

if [[ ! ":$PATH:" == *":${HOME}/bin:"* ]]; then
  PATH="${HOME}/bin:${PATH}"
fi

if command -v fzf &> /dev/null; then
  # shellcheck source=/dev/null
  # source "${HOME}/.fzf.zsh"
  source <(fzf --zsh)
fi

# Test if we have oh-my-posh, or oh-my-zsh installed and if so load them.  If we have both preference is given to oh-my-posh such that priority order is oh-my-posh, oh-my-zsh, default zsh profile/prompt configuration
if command -v oh-my-posh &> /dev/null; then
  # echo "$(date +'%Y-%m-%d %H:%M:%S.%3N') [DEBUG] oh-my-posh is installed"
  # Source the .omp file to configure oh-my-posh
  source "${HOME}/.omp"  
elif [[ -d "${HOME}/.oh-my-zsh" ]]; then
  # echo "$(date +'%Y-%m-%d %H:%M:%S.%3N') [DEBUG] oh-my-zsh is installed" 
  # Source the .omz file to configure oh-my-zsh
  source "${HOME}/.omz"
else
  echo "$(date +'%Y-%m-%d %H:%M:%S.%3N') [DEBUG] oh-my-posh and oh-my-zsh are not installed"
  # Call the configure_zsh function to configure zsh
  # configure_zsh
fi

# Setup history
# Keep 10000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=10000
SAVEHIST=${HISTSIZE}
HISTFILE=~/.zsh_history
HISTDUP=erase
# HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S "
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
setopt hist_verify

# Setting completion styles
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# Test if ZSH Autosuggestions is installed and if so load and configure it
if [[ -d "${HOME}/.zsh/zsh-autosuggestions" ]]; then
  source "${HOME}/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"
  # Customising ZSH Autosuggestion
  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#c6c6c6"
  ZSH_AUTOSUGGEST_STRATEGY=(history completion)
elif [[ -d /usr/share/zsh-autosuggestions ]]; then
  source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
  # Customising ZSH Autosuggestion
  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#c6c6c6"
  ZSH_AUTOSUGGEST_STRATEGY=(history completion)
elif [[ -d "${HOME}/.oh-my-zsh/custom/plugins/zsh-autosuggestions" ]]; then
  # Customising ZSH Autosuggestion
  # shellcheck disable=SC2034
  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#c6c6c6"
  # shellcheck disable=SC2034
  ZSH_AUTOSUGGEST_STRATEGY=(history completion)
fi

# Test if ZSH Syntax Highlighting is installed and if so load and configure it
if [[ -d "${HOME}/.zsh/zsh-syntax-highlighting" ]]; then
  source "${HOME}/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
elif [[ -d /usr/share/zsh-syntax-highlighting ]]; then
  source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Use modern completion system
autoload -Uz compinit
compinit
