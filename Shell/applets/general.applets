#!/usr/bin/env bash

# Path: .applets
# Purpose: General purpose applets for shell commands
# Use: Add applets to this file and they will be sourced by ~/.applets

# This script adds helper functions to the shell
# It is sourced by .bashrc or .zshrc via ~/.applets
# Define additional functions here

# adding use of website cheat.sh for command lookup
cheat(){
    curl "cheat.sh/$1"
}

git-remove-untracked() {
  git fetch --prune && git branch -r | awk "{print \$1}" | grep -E -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "{print \$1}" | xargs git branch -D
}

# Show SSH Tunnel
show_ssh_tunnel(){
  # ps -aux | grep -iE 'ssh\s+(-[fNL]+\s+)*-?[fNL]+'
  pgrep -f 'ssh\s+(-[fNL]+\s+)*-?[fNL]+'
}

# Test sudo access
sudo_test (){
  if [[ ! $(sudo -l -U "${USER}") ]]; then
    echo "[ERROR] User does not have sudo access"
    return 1
  else
    return 0
  fi
}

# Single command to update all tools including in this script
update_tools () {
  echo "== Updating Tools =="
  echo "== Updating AWS CLI =="
  aws_update
  echo "== Updating Kubectl =="
  echo "[INFO] Updating Kubectl to latest version - using set_kubectl -v <version> to set a specific version"
  set_kubectl -s
  echo "== Installing Helm =="
  helm_install
  echo "== Updating Terraform =="
  terraform_install
  echo "== Updating Ansible =="
  ansible_install
  return 0
}

# Get the version of GO if installed and save it to an envrioment variable
get_go_version () {
  if [[ -x "$(command -v go)" ]]; then
    GO_VERSION=$(go version | awk '{print $3}'| tr -d 'go')
    export GO_VERSION
  else
    echo "[ERROR] GO is not installed"
    return 1
  fi
}