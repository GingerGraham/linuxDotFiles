#!/usr/bin/env bash

# Path: .pathVars
# Purpose: Add additional paths to PATH
# Use: Add additional paths to PATH by defining them here and they will be sourced by .zshrc

# ==============================================================
# Ensuring we have system paths in PATH before adding user paths
# ==============================================================
# Defensively ensure system paths are in PATH
for sys_path in /usr/local/bin /usr/bin /bin /usr/local/sbin /usr/sbin /sbin; do
    if [[ -d "$sys_path" ]] && [[ ":$PATH:" != *":$sys_path:"* ]]; then
        PATH="$sys_path${PATH:+:$PATH}"
    fi
done
# ==============================================================

# Set PATH to include users ~/bin directory if it exists
if [[ -d "${HOME}/bin" ]] && [[ ":$PATH:" != *":${HOME}/bin:"* ]]; then
  PATH="${HOME}/bin:${PATH}"
fi

# set PATH so it includes user's private ~/.local/bin if it exists
if [[ -d "${HOME}/.local/bin" ]] && [[ ":$PATH:" != *":${HOME}/.local/bin:"* ]]; then
  PATH="${HOME}/.local/bin:${PATH}"
fi

# If OS is Mac add Homebrew to PATH
if [[ ${OS} == "Mac" ]]; then
	eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# If go/golang is installed add to PATH
if [[ -d "${HOME}/go" ]] && [[ ":$PATH:" != *":${HOME}/go/bin:"* ]]; then
  export GOPATH="${HOME}/go"
  export PATH="${PATH}:${HOME}/go/bin"
fi

# If rust is installed add cargo to PATH
if [[ -d "${HOME}/.cargo/bin" ]] && [[ ":$PATH:" != *":${HOME}/.cargo/bin:"* ]]; then
  export PATH="${PATH}:${HOME}/.cargo/bin"
fi

# If tfenv is installed (by testing for the tfenv command) add to PATH
if [[ -d ${HOME}/.tfenv/bin ]] && command -v ${HOME}/.tfenv/bin/tfenv 1>/dev/null 2>&1 && [[ ":$PATH:" != *":${HOME}/.tfenv/bin:"* ]]; then
  export PATH="${HOME}/.tfenv/bin:${PATH}"
fi

# If pkenv is installed (by testing for the pkenv command) add to PATH
if [[ -d ${HOME}/.pkenv/bin ]] && command -v ${HOME}/.pkenv/bin/pkenv 1>/dev/null 2>&1 && [[ ":$PATH:" != *":${HOME}/.pkenv/bin:"* ]]; then
  export PATH="${HOME}/.pkenv/bin:${PATH}"
fi

# If kubectl is installed add to PATH
if command -v kubectl 1>/dev/null 2>&1 && [[ ":$PATH:" != *":${HOME}/.kube:"* ]]; then
  export PATH="${PATH}:${HOME}/.kube"
fi

# If helm is installed add to PATH
if command -v helm 1>/dev/null 2>&1 && [[ ":$PATH:" != *":${HOME}/.helm:"* ]]; then
  export PATH="${PATH}:${HOME}/.helm"
fi

# If dotnet is installed and the ~/.dotnet directory exists add to PATH
if [[ -d "${HOME}/.dotnet" ]] && [[ ":$PATH:" != *":${HOME}/.dotnet:"* ]]; then
  export PATH="${PATH}:${HOME}/.dotnet"
fi

# If dotnet is installed and the ~/.dotnet/tools directory exists add to PATH
if [[ -d "${HOME}/.dotnet/tools" ]] && [[ ":$PATH:" != *":${HOME}/.dotnet/tools:"* ]]; then
  export PATH="${PATH}:${HOME}/.dotnet/tools"
fi

# If pyenv is installed add to PATH
if [[ -d "${HOME}/.pyenv" ]] && [[ ":$PATH:" != *":${HOME}/.pyenv/bin:"* ]]; then
  export PATH="${HOME}/.pyenv/bin:${PATH}"
fi

# If rbenv is installed evaluate the rbenv init script
if [[ -d "${HOME}/.rbenv" ]] && ! command -v rbenv 1>/dev/null 2>&1; then
  eval "$("${HOME}"/.rbenv/bin/rbenv init -)"
fi

if [[ -d ${HOME}/.local/opt/sonar-scanner/bin ]]; then
  export PATH="${HOME}/.local/opt/sonar-scanner/bin:${PATH}"
fi

# Set Bitwarden Session Token if possible
if command -v bw 1> /dev/null 2>&1; then
  if ! export BW_SESSION=$(secret-tool lookup service bitwarden user watts_graham); then
    log_error "Bitwarden session token not found"
  fi
fi

# LM Studio CLI path addition
if [[ -d "${HOME}/.lmstudio/bin" ]] && [[ ":$PATH:" != *":${HOME}/.lmstudio/bin:"* ]]; then
  export PATH="$PATH:${HOME}/.lmstudio/bin"
fi

# Add pyenv to PATH if it exists
if [[ -d "${HOME}/.pyenv/bin" ]] && [[ ":$PATH:" != *":${HOME}/.pyenv/bin:"* ]]; then
  export PATH="${HOME}/.pyenv/bin:${PATH}"
fi

# ==============================================================
# This must always be at the end of the file
# ==============================================================
# Defensively ensure system paths are in PATH
for sys_path in /usr/local/bin /usr/bin /bin /usr/local/sbin /usr/sbin /sbin; do
    if [[ -d "$sys_path" ]] && [[ ":$PATH:" != *":$sys_path:"* ]]; then
        PATH="$sys_path${PATH:+:$PATH}"
    fi
done
